plugins {
    id 'java'
    id 'jacoco'
    id 'groovy'
    id 'application'
}

group = 'ru.nsu.romanov.checker'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation group: 'org.codehaus.groovy', name: 'groovy-all', version: '3.0.9'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    implementation 'org.codehaus.groovy:groovy-all:3.0.21'
    implementation "org.gradle:gradle-tooling-api:7.3-20210825160000+0000"
    runtimeOnly 'org.slf4j:slf4j-simple:1.7.10'
    runtimeOnly 'org.slf4j:slf4j-simple:1.7.10'
    implementation 'org.freemarker:freemarker:2.3.30'

    implementation 'org.jsoup:jsoup:1.17.2'
    implementation 'commons-io:commons-io:2.16.1'

    implementation group: 'com.puppycrawl.tools', name: 'checkstyle', version: '10.16.0'
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

mainClassName = 'ru.nsu.romanov.checker.Main'

task fatJar(type: Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': "${mainClassName}"
    }
    archiveBaseName = "${rootProject.name}"
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}